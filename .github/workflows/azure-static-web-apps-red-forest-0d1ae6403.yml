name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main # Trigger workflow when code is pushed to the main branch
  pull_request:
    types: [opened, synchronize, reopened, closed] # Trigger workflow on pull request events
    branches:
      - main # Only for pull requests targeting the main branch

jobs:
  build_and_deploy_job:
    # Run this job on push OR on pull request (except when the PR is closed)
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    name: Build and Deploy Job
    permissions:
       id-token: write # Allow writing ID tokens (needed for OIDC authentication)
       contents: read # Allow reading repository contents
    steps:
      - uses: actions/checkout@v3 # Check out the repository code
        with:
          submodules: true # Include Git submodules if any
          lfs: false # Do not fetch Git LFS files

      - uses: actions/setup-node@v4
        with:
          node-version: "18" # Use Node.js version 18
          cache: "npm" # Enable npm dependency caching
          cache-dependency-path: api/package-lock.json # Cache based on api/package-lock.json

      - name: Install API dependencies
        working-directory: api # Move into the api directory
        run: npm install # Install API dependencies

      - name: Run API unit tests
        working-directory: api # Move into the api directory
        run: npm test # Run unit tests for the API

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client # Install required GitHub Actions packages for authentication

      - name: Get Id Token
        uses: actions/github-script@v6 # Run a JavaScript script within the workflow
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken() # Request an OIDC token
           result-encoding: string

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1 # Deploy app to Azure Static Web Apps
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_RED_FOREST_0D1AE6403 }} # Deployment token stored in GitHub secrets
          action: "upload" # Action type: upload (deploy)
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          app_location: "./frontend" # Path to the frontend app source code
          api_location: "./api" # Path to the API source code
          output_location: "." # Path to the build output (optional, here root folder)
          github_id_token: ${{ steps.idtoken.outputs.result }} # Pass the generated OIDC token
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    # Run this job only when a pull request is closed
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1 # Close PR environment in Azure Static Web Apps
        with:
          action: "close" # Action type: close (tear down the temporary environment)
